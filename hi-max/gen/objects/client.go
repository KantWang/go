// Code generated by goa v3.10.0, DO NOT EDIT.
//
// objects client
//
// Command:
// $ goa gen objects/design

package objects

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "objects" service client.
type Client struct {
	ListEndpoint   goa.Endpoint
	FindEndpoint   goa.Endpoint
	AddEndpoint    goa.Endpoint
	UpdateEndpoint goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "objects" service client given the endpoints.
func NewClient(list, find, add, update, delete_ goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:   list,
		FindEndpoint:   find,
		AddEndpoint:    add,
		UpdateEndpoint: update,
		DeleteEndpoint: delete_,
	}
}

// List calls the "list" endpoint of the "objects" service.
// List may return the following errors:
//   - "wrong_date_format" (type *goa.ServiceError)
//   - "wrong_offset_format" (type *goa.ServiceError)
//   - "internal_server" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res NearEarthObjectManagementCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(NearEarthObjectManagementCollection), nil
}

// Find calls the "find" endpoint of the "objects" service.
// Find may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "internal_server" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Find(ctx context.Context, p *FindPayload) (res *NearEarthObjectManagement, err error) {
	var ires interface{}
	ires, err = c.FindEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*NearEarthObjectManagement), nil
}

// Add calls the "add" endpoint of the "objects" service.
// Add may return the following errors:
//   - "wrong_id" (type *goa.ServiceError)
//   - "wrong_time" (type *goa.ServiceError)
//   - "already_exists" (type *goa.ServiceError)
//   - "internal_server" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Add(ctx context.Context, p *AddPayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// Update calls the "update" endpoint of the "objects" service.
// Update may return the following errors:
//   - "wrong_id" (type *goa.ServiceError)
//   - "wrong_time" (type *goa.ServiceError)
//   - "nothing_to_update" (type *goa.ServiceError)
//   - "internal_server" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// Delete calls the "delete" endpoint of the "objects" service.
// Delete may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "internal_server" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.DeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}
